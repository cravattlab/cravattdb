"""empty message

Revision ID: f6d3f21335a4
Revises: None
Create Date: 2016-06-11 23:44:25.227807

"""

# revision identifiers, used by Alembic.
revision = 'f6d3f21335a4'
down_revision = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cell_line',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('synonyms', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experiment_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('search_params', postgresql.JSON(), nullable=True),
    sa.Column('cimage_params', postgresql.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inhibitor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('iupac_name', sa.Text(), nullable=True),
    sa.Column('inchi', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('instrument',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organism',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tax_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('display_name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('probe',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('iupac_name', sa.Text(), nullable=True),
    sa.Column('inchi', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('sample_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('meta', postgresql.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('experiment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('organism_id', sa.Integer(), nullable=True),
    sa.Column('experiment_type_id', sa.Integer(), nullable=True),
    sa.Column('probe_id', sa.Integer(), nullable=True),
    sa.Column('inhibitor_id', sa.Integer(), nullable=True),
    sa.Column('additional_search_params', postgresql.JSON(), nullable=True),
    sa.Column('additional_quant_params', postgresql.JSON(), nullable=True),
    sa.Column('annotations', postgresql.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['experiment_type_id'], ['experiment_type.id'], ),
    sa.ForeignKeyConstraint(['inhibitor_id'], ['inhibitor.id'], ),
    sa.ForeignKeyConstraint(['organism_id'], ['organism.id'], ),
    sa.ForeignKeyConstraint(['probe_id'], ['probe.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles_users',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('dataset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('peptide_index', sa.Integer(), nullable=True),
    sa.Column('uniprot', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('symbol', sa.Text(), nullable=True),
    sa.Column('sequence', sa.Text(), nullable=True),
    sa.Column('clean_sequence', sa.Text(), nullable=True),
    sa.Column('mass', sa.Numeric(), nullable=True),
    sa.Column('charge', sa.Integer(), nullable=True),
    sa.Column('segment', sa.Integer(), nullable=True),
    sa.Column('ratio', sa.Numeric(), nullable=True),
    sa.Column('intensity', sa.Numeric(), nullable=True),
    sa.Column('num_ms2_peaks', sa.Integer(), nullable=True),
    sa.Column('num_candidate_peaks', sa.Integer(), nullable=True),
    sa.Column('max_light_intensity', sa.Numeric(), nullable=True),
    sa.Column('light_noise', sa.Numeric(), nullable=True),
    sa.Column('max_heavy_intensity', sa.Numeric(), nullable=True),
    sa.Column('heavy_noise', sa.Numeric(), nullable=True),
    sa.Column('rsquared', sa.Numeric(), nullable=True),
    sa.Column('entry', sa.Integer(), nullable=True),
    sa.Column('experiment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dataset_clean_sequence'), 'dataset', ['clean_sequence'], unique=False)
    op.create_index(op.f('ix_dataset_description'), 'dataset', ['description'], unique=False)
    op.create_index(op.f('ix_dataset_ratio'), 'dataset', ['ratio'], unique=False)
    op.create_index(op.f('ix_dataset_sequence'), 'dataset', ['sequence'], unique=False)
    op.create_index(op.f('ix_dataset_symbol'), 'dataset', ['symbol'], unique=False)
    op.create_index(op.f('ix_dataset_uniprot'), 'dataset', ['uniprot'], unique=False)
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_dataset_uniprot'), table_name='dataset')
    op.drop_index(op.f('ix_dataset_symbol'), table_name='dataset')
    op.drop_index(op.f('ix_dataset_sequence'), table_name='dataset')
    op.drop_index(op.f('ix_dataset_ratio'), table_name='dataset')
    op.drop_index(op.f('ix_dataset_description'), table_name='dataset')
    op.drop_index(op.f('ix_dataset_clean_sequence'), table_name='dataset')
    op.drop_table('dataset')
    op.drop_table('roles_users')
    op.drop_table('experiment')
    op.drop_table('user')
    op.drop_table('sample_type')
    op.drop_table('role')
    op.drop_table('probe')
    op.drop_table('organism')
    op.drop_table('instrument')
    op.drop_table('inhibitor')
    op.drop_table('experiment_type')
    op.drop_table('cell_line')
    ### end Alembic commands ###
